#pragma checksum "D:\Dropbox\program\typescript\Forum\Forum\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9b3115513dd93ec4d0e9487fcbf665f7b5adc6e5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Dropbox\program\typescript\Forum\Forum\Views\_ViewImports.cshtml"
using Forum;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Dropbox\program\typescript\Forum\Forum\Views\_ViewImports.cshtml"
using Forum.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9b3115513dd93ec4d0e9487fcbf665f7b5adc6e5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2ac609fd15eba99a48942b04c8579a10a24406fb", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Dropbox\program\typescript\Forum\Forum\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div ondrop=""Controller.addFile(event);"" ondragover=""Controller.dragover_handler(event);"">
    <div id=""contentions""></div>
    <div id=""topics"" class=""topicsStyle""></div>
    <div id=""uiDiv"" class=""menuStyle"">
        <textarea id=""argumentTextArea"" placeholder=""Текст новой заметки"" style=""width:320px; height:55px;""></textarea>
        <div class=""uiButtons"">
            <nobr>
                <textarea id=""loginTextArea"" style=""width:20px; height:20px;"" placeholder=""логин""></textarea>
                <button style=""background-color:#7bfc03;"" onclick=""ActionsController.changeContentionColor('#7bfc03')""> Text</button>
                <button style=""background-color:#f8fc03;"" onclick=""ActionsController.changeContentionColor('#f8fc03')""> Text</button>
                <button style=""background-color:#03fcbe;"" onclick=""ActionsController.changeContentionColor('#03fcbe')""> Text</button>
                <button class=""UIBbutton"" onclick=""ActionsController.addContention()"" id='addButton'>Добавить</button>");
            WriteLiteral(@"
                <button class=""UIBbutton"" onclick=""ActionsController.changeContention()"" id='changeButton'>Изменить</button>
                <button class=""UIBbutton"" onclick=""ActionsController.createTopicFromContention()"" style=""background-color: #e6e6e6;"">Топик</button>
                <button class=""UIBbutton""");
            BeginWriteAttribute("onclick", " onclick=\"", 1386, "\"", 1396, 0);
            EndWriteAttribute();
            WriteLiteral(@">перенести</button>
                <button class=""UIBbutton"" onclick=""ActionsController.import()"">import</button>
                <button class=""UIBbutton"" onclick=""ActionsController.addLink()"">Add Link</button>
            </nobr>
            <br />
            <nobr>
                <textarea id=""encriptionKeyTextArea"" style=""width:20px; height:20px;"" placeholder=""ключ для шифрования""></textarea>
                <button style=""background-color:#FFF;"" onclick=""ActionsController.changeContentionColor('#FFF')""> Text</button>
                <button style=""background-color:#fc03f0;"" onclick=""ActionsController.changeContentionColor('#fc03f0')""> Text</button>
                <button style=""background-color:#fc3503;"" onclick=""ActionsController.changeContentionColor('#fc3503')""> Text</button>
                <button class=""UIBbutton"" onclick=""ActionsController.addUrl()"">Add Url</button>
                <button class=""UIBbutton"" onclick=""ActionsController.deleteContention()"">удалить</button>
           ");
            WriteLiteral(@"     <button class=""UIBbutton"" onclick=""ActionsController.addSelectedToArchive()"">(archive)</button>
                <button class=""UIBbutton"" onclick=""ActionsController.collapceSelectedContention()"" style=""background-color: #9b9bff;"">свернуть</button>
                <button class=""UIBbutton"" onclick=""ActionsController.export()"">export</button>
                <button class=""UIBbutton"" onclick=""Controller.reload()"">Reload</button>
            </nobr>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
